@using GameStore.Web.App_LocalResources
@using GameStore.Web.HtmlHelpers
@model GameStore.Web.Models.Game.DisplayGameViewModel
@{
    ViewBag.Title = GlobalRes.Games;
}

<input id="detailsLinkTemplate" type="hidden" value="@Url.Action("Details", "Game", new {gamekey = "gamekey"})"/>
<input id="gamesLink" type="hidden" value="@Url.HttpRouteUrl("LangApi", new { controller="games" })"/>
<div class="items-block" ng-app="gamesApp" ng-controller="gameController">
    <div class="paper-block">
        <form class="pagin-form">
            <div class="form-group">
                @Html.LabelFor(x => x.FilterModel.OrderBy)
                @Html.EditorFor(x => x.FilterModel.OrderBy)
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.FilterModel.ItemsPerPage)
                @Html.DropDownListFor(x => x.FilterModel.ItemsPerPage, Model.ItemsPerPageVariants)
            </div>
        </form>
    </div>
    <div class="pagin">
        <a ng-repeat="page in pages" class="page-link {{page == current ? 'active':''}}" data-page={{page}}>{{page}}</a>
    </div>
    <div class="games-list">
        @*@Html.Partial("_gamesList", @Model.Model)*@
        <table class="custom-table">
            <thead>
                <tr>
                    <td>@GlobalRes.Game</td>
                    <td>@GlobalRes.Publisher</td>
                    <td>@GlobalRes.Price</td>
                </tr>
            </thead>
            <tbody>
                <tr class="clickable-row" ng-repeat="game in games" data-href="{{detailsLinkTemplate.replace('gamekey', game.Key)}}">
                    <td>
                        {{game.Name}}
                    </td>
                    <td>
                        {{game.Publisher.CompanyName}}
                    </td>
                    <td class="one-line">
                        {{game.Price.toFixed(2)}} $
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
</div>

@section adv {
    <div class="paper-block filterin-block">
        @*<button class="filterin-block-switch arrow-wrapper">
                <div class=" arrow left"></div>
            </button>*@
        <form action="@Url.Action("Index")" class="filters-form">
            <input type="submit" value="@GlobalRes.Filter" class="filter-button" disabled="disabled" />
            <div class="form-group">
                @Html.LabelFor(x => x.FilterModel.Name)
                @Html.EditorFor(x => x.FilterModel.Name)
                @Html.ValidationMessageFor(x => x.FilterModel.Name)
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.FilterModel.MinPrice)
                @Html.TextBoxFor(x => x.FilterModel.MinPrice, new {value = ""})
                @Html.ValidationMessageFor(x => x.FilterModel.MinPrice)
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.FilterModel.MaxPrice)
                @Html.TextBoxFor(x => x.FilterModel.MaxPrice, new {value = ""})
                @Html.ValidationMessageFor(x => x.FilterModel.MaxPrice)
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.FilterModel.MinDateShortcut)
                @Html.EditorFor(x => x.FilterModel.MinDateShortcut)
                @Html.ValidationMessageFor(x => x.FilterModel.MinDateShortcut)
            </div>
            <div class="form-group">
                @Html.CreateTree(Model.Genres, @Html.NameFor(x => x.FilterModel.GenreIds).ToString())
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.FilterModel.PlatformTypeIds)
                @foreach (var pt in Model.PlatformTypes)
                {
                    <div class="checkbox-wrapper">
                        <input id="@String.Concat("platform-type-", pt.Id)" type="checkbox" name="@Html.NameFor(x => x.FilterModel.PlatformTypeIds)" value="@pt.Id"/>
                        <label for="@String.Concat("platform-type-", pt.Id)">@pt.Name</label>
                    </div>
                }
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.FilterModel.PublisherIds)
                @foreach (var p in Model.Publishers)
                {
                    <div class="checkbox-wrapper">
                        <input id="@String.Concat("publisher-", p.Id)" type="checkbox" name="@Html.NameFor(x => x.FilterModel.PublisherIds)" value="@p.Id"/>
                        <label for="@String.Concat("publisher-", p.Id)">@p.CompanyName</label>
                    </div>
                }
            </div>

        </form>
    </div>

}

@section scripts {
    @Scripts.Render("~/Scripts/forms")
    @Scripts.Render("~/Scripts/games")
}
