@using GameStore.Web.App_LocalResources
@using GameStore.Web.HtmlHelpers
@model GameStore.Web.Models.Game.DisplayGameViewModel
@{
    ViewBag.Title = GlobalRes.Games;
}

<div class="filterable-list-wrapper">
    <div class="paper-block filterin-block">
        <button class="filterin-block-switch arrow-wrapper">
            <div class=" arrow left"></div>
        </button>
        <form action="@Url.Action("Index")" class="filters-form">
            <div class="form-group">
                @Html.LabelFor(x => x.FilterModel.Name)
                @Html.EditorFor(x => x.FilterModel.Name)
                @Html.ValidationMessageFor(x => x.FilterModel.Name)
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.FilterModel.MinPrice)
                @Html.TextBoxFor(x => x.FilterModel.MinPrice, new {value = ""})
                @Html.ValidationMessageFor(x => x.FilterModel.MinPrice)
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.FilterModel.MaxPrice)
                @Html.TextBoxFor(x => x.FilterModel.MaxPrice, new {value = ""})
                @Html.ValidationMessageFor(x => x.FilterModel.MaxPrice)
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.FilterModel.MinDateShortcut)
                @Html.DropDownListFor(x => x.FilterModel.MinDateShortcut, Model.DatesShorcuts)
                @Html.ValidationMessageFor(x => x.FilterModel.MinDateShortcut)
            </div>
            <div class="form-group">
                @Html.CreateTree(Model.Genres, @Html.NameFor(x => x.FilterModel.GenreIds).ToString())
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.FilterModel.PlatformTypeIds)
                @foreach (var pt in Model.PlatformTypes)
                {
                    <div class="checkbox-wrapper">
                        <input id="@String.Concat("platform-type-", pt.Id)" type="checkbox" name="@Html.NameFor(x => x.FilterModel.PlatformTypeIds)" value="@pt.Id"/>
                        <label for="@String.Concat("platform-type-", pt.Id)">@pt.Name</label>
                    </div>
                }
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.FilterModel.PublisherIds)
                @foreach (var p in Model.Publishers)
                {
                    <div class="checkbox-wrapper">
                        <input id="@String.Concat("publisher-", p.Id)" type="checkbox" name="@Html.NameFor(x => x.FilterModel.PublisherIds)" value="@p.Id"/>
                        <label for="@String.Concat("publisher-", p.Id)">@p.CompanyName</label>
                    </div>
                }
            </div>
            <input type="submit" value="Filter" class="filter-button" disabled="disabled"/>
        </form>
    </div>
    <div class="items-block">
        <div class="paper-block">
            <form class="pagin-form">
                <div class="form-group">
                    @Html.LabelFor(x => x.FilterModel.OrderBy)
                    @Html.DropDownListFor(x => x.FilterModel.OrderBy, Model.OrderByVariants)
                </div>
                <div class="form-group">
                    @Html.LabelFor(x => x.FilterModel.ItemsPerPage)
                    @Html.DropDownListFor(x => x.FilterModel.ItemsPerPage, Model.ItemsPerPageVariants)
                </div>
            </form>
        </div>
        <div class="paper-block games-list">
            @Html.Partial("_gamesList", @Model.Model)
        </div>
    </div>
</div>

@section scripts {
    @Scripts.Render("~/Scripts/forms")
    @Scripts.Render("~/Scripts/games")
}
